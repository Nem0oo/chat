{"version":3,"file":"990.main.js","mappings":"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","sources":["webpack://chat/./src/components/pages/hands/handpose-estimation/shared/params.js","webpack://chat/./src/components/pages/hands/handpose-estimation/shared/util.js","webpack://chat/./src/components/pages/hands/handpose-estimation/camera.js","webpack://chat/./src/components/pages/hands/handpose-estimation/option_panel.js","webpack://chat/./src/components/pages/hands/handpose-estimation/index.js","webpack://chat/ignored|/home/raju/repositories/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|fs","webpack://chat/ignored|/home/raju/repositories/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|os","webpack://chat/ignored|/home/raju/repositories/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|path","webpack://chat/ignored|/home/raju/repositories/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|perf_hooks","webpack://chat/ignored|/home/raju/repositories/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|worker_threads","webpack://chat/ignored|/home/raju/repositories/chat/node_modules/@tensorflow/tfjs-core/dist/platforms|node-fetch","webpack://chat/ignored|/home/raju/repositories/chat/node_modules/@tensorflow/tfjs-core/dist/platforms|util","webpack://chat/ignored|/home/raju/repositories/chat/node_modules/seedrandom|crypto"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as handdetection from \"@tensorflow-models/hand-pose-detection\";\n\nexport const DEFAULT_LINE_WIDTH = 2;\nexport const DEFAULT_RADIUS = 2;\n\nexport const VIDEO_SIZE = {\n  \"640 X 480\": { width: 640, height: 480 },\n  \"640 X 360\": { width: 640, height: 360 },\n  \"360 X 270\": { width: 360, height: 270 },\n};\nexport const STATE = {\n  camera: { targetFPS: 60, sizeOption: \"360 X 270\" },\n  backend: \"\",\n  flags: {},\n  modelConfig: {},\n};\nexport const MEDIAPIPE_HANDS_CONFIG = {\n  type: \"full\",\n  render3D: false,\n};\n/**\n * This map descripes tunable flags and theior corresponding types.\n *\n * The flags (keys) in the map satisfy the following two conditions:\n * - Is tunable. For example, `IS_BROWSER` and `IS_CHROME` is not tunable,\n * because they are fixed when running the scripts.\n * - Does not depend on other flags when registering in `ENV.registerFlag()`.\n * This rule aims to make the list streamlined, and, since there are\n * dependencies between flags, only modifying an independent flag without\n * modifying its dependents may cause inconsistency.\n * (`WEBGL_RENDER_FLOAT32_CAPABLE` is an exception, because only exposing\n * `WEBGL_FORCE_F16_TEXTURES` may confuse users.)\n */\nexport const TUNABLE_FLAG_VALUE_RANGE_MAP = {\n  WEBGL_VERSION: [1, 2],\n  WASM_HAS_SIMD_SUPPORT: [true, false],\n  WASM_HAS_MULTITHREAD_SUPPORT: [true, false],\n  WEBGL_CPU_FORWARD: [true, false],\n  WEBGL_PACK: [true, false],\n  WEBGL_FORCE_F16_TEXTURES: [true, false],\n  WEBGL_RENDER_FLOAT32_CAPABLE: [true, false],\n  WEBGL_FLUSH_THRESHOLD: [-1, 0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n  CHECK_COMPUTATION_FOR_ERRORS: [true, false],\n};\n\nexport const BACKEND_FLAGS_MAP = {\n  [\"tfjs-wasm\"]: [\"WASM_HAS_SIMD_SUPPORT\", \"WASM_HAS_MULTITHREAD_SUPPORT\"],\n  [\"tfjs-webgl\"]: [\n    \"WEBGL_VERSION\",\n    \"WEBGL_CPU_FORWARD\",\n    \"WEBGL_PACK\",\n    \"WEBGL_FORCE_F16_TEXTURES\",\n    \"WEBGL_RENDER_FLOAT32_CAPABLE\",\n    \"WEBGL_FLUSH_THRESHOLD\",\n  ],\n  [\"mediapipe-gpu\"]: [],\n};\n\nexport const MODEL_BACKEND_MAP = {\n  [handdetection.SupportedModels.MediaPipeHands]: [\n    \"mediapipe-gpu\",\n    \"tfjs-webgl\",\n  ],\n};\n\nexport const TUNABLE_FLAG_NAME_MAP = {\n  PROD: \"production mode\",\n  WEBGL_VERSION: \"webgl version\",\n  WASM_HAS_SIMD_SUPPORT: \"wasm SIMD\",\n  WASM_HAS_MULTITHREAD_SUPPORT: \"wasm multithread\",\n  WEBGL_CPU_FORWARD: \"cpu forward\",\n  WEBGL_PACK: \"webgl pack\",\n  WEBGL_FORCE_F16_TEXTURES: \"enforce float16\",\n  WEBGL_RENDER_FLOAT32_CAPABLE: \"enable float32\",\n  WEBGL_FLUSH_THRESHOLD: \"GL flush wait time(ms)\",\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tf from \"@tensorflow/tfjs-core\";\nimport { TUNABLE_FLAG_VALUE_RANGE_MAP } from \"./params\";\n\nexport function isiOS() {\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\n}\n\nexport function isAndroid() {\n  return /Android/i.test(navigator.userAgent);\n}\n\nexport function isMobile() {\n  return isAndroid() || isiOS();\n}\n\n/**\n * Reset the target backend.\n *\n * @param backendName The name of the backend to be reset.\n */\nasync function resetBackend(backendName) {\n  const ENGINE = tf.engine();\n  if (!(backendName in ENGINE.registryFactory)) {\n    throw new Error(`${backendName} backend is not registed.`);\n  }\n\n  if (backendName in ENGINE.registry) {\n    const backendFactory = tf.findBackendFactory(backendName);\n    tf.removeBackend(backendName);\n    tf.registerBackend(backendName, backendFactory);\n  }\n\n  await tf.setBackend(backendName);\n}\n\n/**\n * Set environment flags.\n *\n * This is a wrapper function of `tf.env().setFlags()` to constrain users to\n * only set tunable flags (the keys of `TUNABLE_FLAG_TYPE_MAP`).\n *\n * ```js\n * const flagConfig = {\n *        WEBGL_PACK: false,\n *      };\n * await setEnvFlags(flagConfig);\n *\n * console.log(tf.env().getBool('WEBGL_PACK')); // false\n * console.log(tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')); // false\n * ```\n *\n * @param flagConfig An object to store flag-value pairs.\n */\nexport async function setBackendAndEnvFlags(flagConfig, backend) {\n  if (flagConfig == null) {\n    return;\n  } else if (typeof flagConfig !== \"object\") {\n    throw new Error(\n      `An object is expected, while a(n) ${typeof flagConfig} is found.`,\n    );\n  }\n\n  // Check the validation of flags and values.\n  for (const flag in flagConfig) {\n    // TODO: check whether flag can be set as flagConfig[flag].\n    if (!(flag in TUNABLE_FLAG_VALUE_RANGE_MAP)) {\n      throw new Error(`${flag} is not a tunable or valid environment flag.`);\n    }\n    if (TUNABLE_FLAG_VALUE_RANGE_MAP[flag].indexOf(flagConfig[flag]) === -1) {\n      throw new Error(\n        `${flag} value is expected to be in the range [${TUNABLE_FLAG_VALUE_RANGE_MAP[flag]}], while ${flagConfig[flag]}` +\n          \" is found.\",\n      );\n    }\n  }\n\n  tf.env().setFlags(flagConfig);\n\n  const [runtime, $backend] = backend.split(\"-\");\n\n  if (runtime === \"tfjs\") {\n    await resetBackend($backend);\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as scatter from \"scatter-gl\";\n\nimport * as params from \"./shared/params\";\nimport { isMobile } from \"./shared/util\";\n\n// These anchor points allow the hand pointcloud to resize according to its\n// position in the input.\nconst ANCHOR_POINTS = [\n  [0, 0, 0],\n  [0, 0.1, 0],\n  [-0.1, 0, 0],\n  [-0.1, -0.1, 0],\n];\n\nconst fingerLookupIndices = {\n  thumb: [0, 1, 2, 3, 4],\n  indexFinger: [0, 5, 6, 7, 8],\n  middleFinger: [0, 9, 10, 11, 12],\n  ringFinger: [0, 13, 14, 15, 16],\n  pinky: [0, 17, 18, 19, 20],\n}; // for rendering each finger as a polyline\n\nconst connections = [\n  [0, 1],\n  [1, 2],\n  [2, 3],\n  [3, 4],\n  [0, 5],\n  [5, 6],\n  [6, 7],\n  [7, 8],\n  [0, 9],\n  [9, 10],\n  [10, 11],\n  [11, 12],\n  [0, 13],\n  [13, 14],\n  [14, 15],\n  [15, 16],\n  [0, 17],\n  [17, 18],\n  [18, 19],\n  [19, 20],\n];\n\nfunction createScatterGLContext(selectors) {\n  const scatterGLEl = document.querySelector(selectors);\n  return {\n    scatterGLEl,\n    scatterGL: new scatter.ScatterGL(scatterGLEl, {\n      rotateOnStart: true,\n      selectEnabled: false,\n      styles: { polyline: { defaultOpacity: 1, deselectedOpacity: 1 } },\n    }),\n    scatterGLHasInitialized: false,\n  };\n}\n\nconst scatterGLCtxtLeftHand = createScatterGLContext(\n  \"#scatter-gl-container-left\",\n);\nconst scatterGLCtxtRightHand = createScatterGLContext(\n  \"#scatter-gl-container-right\",\n);\n\nexport class Camera {\n  constructor() {\n    this.video = document.getElementById(\"video\");\n    this.canvas = document.getElementById(\"output\");\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n\n  /**\n   * Initiate a Camera instance and wait for the camera stream to be ready.\n   * @param cameraParam From app `STATE.camera`.\n   */\n  static async setupCamera(cameraParam) {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      throw new Error(\n        \"Browser API navigator.mediaDevices.getUserMedia not available\",\n      );\n    }\n\n    const { targetFPS, sizeOption } = cameraParam;\n    const $size = params.VIDEO_SIZE[sizeOption];\n    const videoConfig = {\n      audio: false,\n      video: {\n        // back camera\n        facingMode: \"environment\",\n        // Only setting the video to a specified size for large screen, on\n        // mobile devices accept the default size.\n        // width: isMobile() ? params.VIDEO_SIZE['360 X 270'].width : $size.width,\n        // height: isMobile() ? params.VIDEO_SIZE['360 X 270'].height :\n        //  $size.height,\n        frameRate: {\n          ideal: targetFPS,\n        },\n      },\n    };\n\n    const stream = await navigator.mediaDevices.getUserMedia(videoConfig);\n\n    const camera = new Camera();\n    camera.video.srcObject = stream;\n\n    await new Promise((resolve) => {\n      camera.video.onloadedmetadata = () => {\n        // Ensure the canvas matches the video's intrinsic size\n        camera.canvas.width = camera.video.videoWidth;\n        camera.canvas.height = camera.video.videoHeight;\n\n        // Update the container's style if necessary, can be handled with CSS\n        const canvasContainer = document.querySelector(\".canvas-wrapper\");\n        canvasContainer.style.width = \"100%\"; // Make the container responsive\n        canvasContainer.style.height = \"auto\"; // Adjust height based on the content\n        resolve(video);\n      };\n    });\n\n    camera.video.play();\n\n    const videoWidth = camera.video.videoWidth;\n    const videoHeight = camera.video.videoHeight;\n    // Must set below two lines, otherwise video element doesn't show.\n    // camera.video.width = videoWidth;\n    // camera.video.height = videoHeight;\n\n    // camera.canvas.width = videoWidth;\n    // camera.canvas.height = videoHeight;\n    // const canvasContainer = document.querySelector('.canvas-wrapper');\n    // canvasContainer.style = `width: ${videoWidth}px; height: ${videoHeight}px`;\n\n    // Because the image from camera is mirrored, need to flip horizontally.\n    if (videoConfig.video.facingMode === \"user\") {\n      camera.ctx.translate(camera.video.videoWidth, 0);\n      camera.ctx.scale(-1, 1);\n    }\n\n    for (const ctxt of [scatterGLCtxtLeftHand, scatterGLCtxtRightHand]) {\n      ctxt.scatterGLEl.style = `width: ${videoWidth / 2}px; height: ${videoHeight / 2}px;`;\n      ctxt.scatterGL.resize();\n\n      ctxt.scatterGLEl.style.display = params.STATE.modelConfig.render3D\n        ? \"inline-block\"\n        : \"none\";\n    }\n\n    return camera;\n  }\n\n  drawCtx() {\n    this.ctx.drawImage(\n      this.video,\n      0,\n      0,\n      this.video.videoWidth,\n      this.video.videoHeight,\n    );\n  }\n\n  clearCtx() {\n    this.ctx.clearRect(0, 0, this.video.videoWidth, this.video.videoHeight);\n  }\n\n  /**\n   * Draw the keypoints on the video.\n   * @param hands A list of hands to render.\n   */\n  drawResults(hands) {\n    // Sort by right to left hands.\n    hands.sort((hand1, hand2) => {\n      if (hand1.handedness < hand2.handedness) return 1;\n      if (hand1.handedness > hand2.handedness) return -1;\n      return 0;\n    });\n\n    // Pad hands to clear empty scatter GL plots.\n    while (hands.length < 2) hands.push({});\n\n    for (let i = 0; i < hands.length; ++i) {\n      // Third hand and onwards scatterGL context is set to null since we\n      // don't render them.\n      const ctxt = [scatterGLCtxtLeftHand, scatterGLCtxtRightHand][i];\n      this.drawResult(hands[i], ctxt);\n    }\n  }\n\n  /**\n   * Draw the keypoints on the video.\n   * @param hand A hand with keypoints to render.\n   * @param ctxt Scatter GL context to render 3D keypoints to.\n   */\n  drawResult(hand, ctxt) {\n    if (hand.keypoints != null) {\n      this.drawKeypoints(hand.keypoints, hand.handedness);\n    }\n    // Don't render 3D hands after first two.\n    if (ctxt == null) {\n      return;\n    }\n    if (hand.keypoints3D != null && params.STATE.modelConfig.render3D) {\n      this.drawKeypoints3D(hand.keypoints3D, hand.handedness, ctxt);\n    } else {\n      // Clear scatter plot.\n      this.drawKeypoints3D([], \"\", ctxt);\n    }\n  }\n\n  /**\n   * Draw the keypoints on the video.\n   * @param keypoints A list of keypoints.\n   * @param handedness Label of hand (either Left or Right).\n   */\n  drawKeypoints(keypoints, handedness) {\n    const keypointsArray = keypoints;\n    this.ctx.fillStyle = handedness === \"Left\" ? \"Red\" : \"Blue\";\n    this.ctx.strokeStyle = \"White\";\n    this.ctx.lineWidth = params.DEFAULT_LINE_WIDTH;\n\n    for (let i = 0; i < keypointsArray.length; i++) {\n      const y = keypointsArray[i].x;\n      const x = keypointsArray[i].y;\n      this.drawPoint(x - 2, y - 2, 3);\n    }\n\n    const fingers = Object.keys(fingerLookupIndices);\n    for (let i = 0; i < fingers.length; i++) {\n      const finger = fingers[i];\n      const points = fingerLookupIndices[finger].map((idx) => keypoints[idx]);\n      this.drawPath(points, false);\n    }\n  }\n\n  drawPath(points, closePath) {\n    const region = new Path2D();\n    region.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      const point = points[i];\n      region.lineTo(point.x, point.y);\n    }\n\n    if (closePath) {\n      region.closePath();\n    }\n    this.ctx.stroke(region);\n  }\n\n  drawPoint(y, x, r) {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    this.ctx.fill();\n  }\n\n  drawKeypoints3D(keypoints, handedness, ctxt) {\n    const scoreThreshold = params.STATE.modelConfig.scoreThreshold || 0;\n    const pointsData = keypoints.map((keypoint) => [\n      -keypoint.x,\n      -keypoint.y,\n      -keypoint.z,\n    ]);\n\n    const dataset = new scatter.ScatterGL.Dataset([\n      ...pointsData,\n      ...ANCHOR_POINTS,\n    ]);\n\n    ctxt.scatterGL.setPointColorer((i) => {\n      if (keypoints[i] == null || keypoints[i].score < scoreThreshold) {\n        // hide anchor points and low-confident points.\n        return \"#ffffff\";\n      }\n      return handedness === \"Left\" ? \"#ff0000\" : \"#0000ff\";\n    });\n\n    if (!ctxt.scatterGLHasInitialized) {\n      ctxt.scatterGL.render(dataset);\n    } else {\n      ctxt.scatterGL.updateDataset(dataset);\n    }\n    const sequences = connections.map((pair) => ({ indices: pair }));\n    ctxt.scatterGL.setSequences(sequences);\n    ctxt.scatterGLHasInitialized = true;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport dat from \"dat.gui\";\nimport * as handdetection from \"@tensorflow-models/hand-pose-detection\";\nimport * as tf from \"@tensorflow/tfjs-core\";\n\nimport * as params from \"./shared/params\";\n\n/**\n * Records each flag's default value under the runtime environment and is a\n * constant in runtime.\n */\nlet TUNABLE_FLAG_DEFAULT_VALUE_MAP;\n\nconst stringValueMap = {};\n\nexport async function setupDatGui(urlParams) {\n  const gui = new dat.GUI({ width: 300 });\n  gui.domElement.id = \"gui\";\n  gui.domElement.style.display = \"none\";\n\n  // The camera folder contains options for video settings.\n  const cameraFolder = gui.addFolder(\"Camera\");\n  const fpsController = cameraFolder.add(params.STATE.camera, \"targetFPS\");\n  fpsController.onFinishChange((_) => {\n    params.STATE.isTargetFPSChanged = true;\n  });\n  const sizeController = cameraFolder.add(\n    params.STATE.camera,\n    \"sizeOption\",\n    Object.keys(params.VIDEO_SIZE),\n  );\n  sizeController.onChange((_) => {\n    params.STATE.isSizeOptionChanged = true;\n  });\n  cameraFolder.open();\n\n  // The model folder contains options for model selection.\n  const modelFolder = gui.addFolder(\"Model\");\n\n  const model = urlParams.get(\"model\");\n  let type = urlParams.get(\"type\");\n  let maxNumHands = urlParams.get(\"maxNumHands\");\n\n  switch (model) {\n    case \"mediapipe_hands\":\n      params.STATE.model = handdetection.SupportedModels.MediaPipeHands;\n      if (type !== \"full\" && type !== \"lite\") {\n        // Nulify invalid value.\n        type = \"lite\";\n      }\n      if (maxNumHands == null || maxNumHands < 1) {\n        // Nulify invalid value.\n        maxNumHands = 1;\n      }\n      break;\n    default:\n      alert(`${urlParams.get(\"model\")}`);\n      break;\n  }\n\n  const modelController = modelFolder.add(\n    params.STATE,\n    \"model\",\n    Object.values(handdetection.SupportedModels),\n  );\n\n  modelController.onChange((_) => {\n    params.STATE.isModelChanged = true;\n    showModelConfigs(modelFolder);\n    showBackendConfigs(backendFolder);\n  });\n\n  showModelConfigs(modelFolder, type, maxNumHands);\n\n  modelFolder.open();\n\n  const backendFolder = gui.addFolder(\"Backend\");\n\n  showBackendConfigs(backendFolder);\n\n  backendFolder.open();\n\n  return gui;\n}\n\nasync function showBackendConfigs(folderController) {\n  // Clean up backend configs for the previous model.\n  const fixedSelectionCount = 0;\n  while (folderController.__controllers.length > fixedSelectionCount) {\n    folderController.remove(\n      folderController.__controllers[folderController.__controllers.length - 1],\n    );\n  }\n  const backends = params.MODEL_BACKEND_MAP[params.STATE.model];\n  // The first element of the array is the default backend for the model.\n  params.STATE.backend = backends[0];\n  const backendController = folderController.add(\n    params.STATE,\n    \"backend\",\n    backends,\n  );\n  backendController.name(\"runtime-backend\");\n  backendController.onChange(async (backend) => {\n    params.STATE.isBackendChanged = true;\n    await showFlagSettings(folderController, backend);\n  });\n  await showFlagSettings(folderController, params.STATE.backend);\n}\n\nfunction showModelConfigs(folderController, type, maxNumHands) {\n  // Clean up model configs for the previous model.\n  // The first constroller under the `folderController` is the model\n  // selection.\n  const fixedSelectionCount = 1;\n  while (folderController.__controllers.length > fixedSelectionCount) {\n    folderController.remove(\n      folderController.__controllers[folderController.__controllers.length - 1],\n    );\n  }\n\n  switch (params.STATE.model) {\n    case handdetection.SupportedModels.MediaPipeHands:\n      addMediaPipeHandsControllers(folderController, type, maxNumHands);\n      break;\n    default:\n      alert(`Model ${params.STATE.model} is not supported.`);\n  }\n}\n\n// The MediaPipeHands model config folder contains options for MediaPipeHands config\n// settings.\nfunction addMediaPipeHandsControllers(modelConfigFolder, type, maxNumHands) {\n  params.STATE.modelConfig = { ...params.MEDIAPIPE_HANDS_CONFIG };\n  params.STATE.modelConfig.type = type != null ? type : \"full\";\n  params.STATE.modelConfig.maxNumHands = maxNumHands != null ? maxNumHands : 2;\n\n  const typeController = modelConfigFolder.add(\n    params.STATE.modelConfig,\n    \"type\",\n    [\"lite\", \"full\"],\n  );\n  typeController.onChange((_) => {\n    // Set isModelChanged to true, so that we don't render any result during\n    // changing models.\n    params.STATE.isModelChanged = true;\n  });\n\n  const maxNumHandsController = modelConfigFolder\n    .add(params.STATE.modelConfig, \"maxNumHands\", 1, 10)\n    .step(1);\n  maxNumHandsController.onChange((_) => {\n    // Set isModelChanged to true, so that we don't render any result during\n    // changing models.\n    params.STATE.isModelChanged = true;\n  });\n\n  const render3DController = modelConfigFolder.add(\n    params.STATE.modelConfig,\n    \"render3D\",\n  );\n  render3DController.onChange((render3D) => {\n    document.querySelector(\"#scatter-gl-container-left\").style.display =\n      render3D ? \"inline-block\" : \"none\";\n    document.querySelector(\"#scatter-gl-container-right\").style.display =\n      render3D ? \"inline-block\" : \"none\";\n  });\n}\n\n/**\n * Query all tunable flags' default value and populate `STATE.flags` with them.\n */\nasync function initDefaultValueMap() {\n  // Clean up the cache to query tunable flags' default values.\n  TUNABLE_FLAG_DEFAULT_VALUE_MAP = {};\n  params.STATE.flags = {};\n  for (const backend in params.BACKEND_FLAGS_MAP) {\n    for (\n      let index = 0;\n      index < params.BACKEND_FLAGS_MAP[backend].length;\n      index++\n    ) {\n      const flag = params.BACKEND_FLAGS_MAP[backend][index];\n      TUNABLE_FLAG_DEFAULT_VALUE_MAP[flag] = await tf.env().getAsync(flag);\n    }\n  }\n\n  // Initialize STATE.flags with tunable flags' default values.\n  for (const flag in TUNABLE_FLAG_DEFAULT_VALUE_MAP) {\n    if (params.BACKEND_FLAGS_MAP[params.STATE.backend].indexOf(flag) > -1) {\n      params.STATE.flags[flag] = TUNABLE_FLAG_DEFAULT_VALUE_MAP[flag];\n    }\n  }\n}\n\n/**\n * Heuristically determine flag's value range based on flag's default value.\n *\n * Assume that the flag's default value has already chosen the best option for\n * the runtime environment, so users can only tune the flag value downwards.\n *\n * For example, if the default value of `WEBGL_RENDER_FLOAT32_CAPABLE` is false,\n * the tunable range is [false]; otherwise, the tunable range is [true. false].\n *\n * @param {string} flag\n */\nfunction getTunableRange(flag) {\n  const defaultValue = TUNABLE_FLAG_DEFAULT_VALUE_MAP[flag];\n  if (flag === \"WEBGL_FORCE_F16_TEXTURES\") {\n    return [false, true];\n  } else if (flag === \"WEBGL_VERSION\") {\n    const tunableRange = [];\n    for (let value = 1; value <= defaultValue; value++) {\n      tunableRange.push(value);\n    }\n    return tunableRange;\n  } else if (flag === \"WEBGL_FLUSH_THRESHOLD\") {\n    const tunableRange = [-1];\n    for (let value = 0; value <= 2; value += 0.25) {\n      tunableRange.push(value);\n    }\n    return tunableRange;\n  } else if (typeof defaultValue === \"boolean\") {\n    return defaultValue ? [false, true] : [false];\n  } else if (params.TUNABLE_FLAG_VALUE_RANGE_MAP[flag] != null) {\n    return params.TUNABLE_FLAG_VALUE_RANGE_MAP[flag];\n  } else {\n    return [defaultValue];\n  }\n}\n\n/**\n * Show flag settings for the given backend under the UI element of\n * `folderController`.\n *\n * @param {dat.gui.GUI} folderController\n * @param {string} backendName\n */\nfunction showBackendFlagSettings(folderController, backendName) {\n  const tunableFlags = params.BACKEND_FLAGS_MAP[backendName];\n  for (let index = 0; index < tunableFlags.length; index++) {\n    const flag = tunableFlags[index];\n    const flagName = params.TUNABLE_FLAG_NAME_MAP[flag] || flag;\n\n    // When tunable (bool) and range (array) attributes of `flagRegistry` is\n    // implemented, we can apply them to here.\n    const flagValueRange = getTunableRange(flag);\n    // Heuristically consider a flag with at least two options as tunable.\n    if (flagValueRange.length < 2) {\n      console.warn(\n        `The ${flag} is considered as untunable, ` +\n          `because its value range is [${flagValueRange}].`,\n      );\n      continue;\n    }\n\n    let flagController;\n    if (typeof flagValueRange[0] === \"boolean\") {\n      // Show checkbox for boolean flags.\n      flagController = folderController.add(params.STATE.flags, flag);\n    } else {\n      // Show dropdown for other types of flags.\n      flagController = folderController.add(\n        params.STATE.flags,\n        flag,\n        flagValueRange,\n      );\n\n      // Because dat.gui always casts dropdown option values to string, we need\n      // `stringValueMap` and `onFinishChange()` to recover the value type.\n      if (stringValueMap[flag] == null) {\n        stringValueMap[flag] = {};\n        for (let index = 0; index < flagValueRange.length; index++) {\n          const realValue = flagValueRange[index];\n          const stringValue = String(flagValueRange[index]);\n          stringValueMap[flag][stringValue] = realValue;\n        }\n      }\n      flagController.onFinishChange((stringValue) => {\n        params.STATE.flags[flag] = stringValueMap[flag][stringValue];\n      });\n    }\n    flagController.name(flagName).onChange(() => {\n      params.STATE.isFlagChanged = true;\n    });\n  }\n}\n\n/**\n * Set up flag settings under the UI element of `folderController`:\n * - If it is the first call, initialize the flags' default value and show flag\n * settings for both the general and the given backend.\n * - Else, clean up flag settings for the previous backend and show flag\n * settings for the new backend.\n *\n * @param {dat.gui.GUI} folderController\n * @param {string} backendName\n */\nasync function showFlagSettings(folderController, backendName) {\n  await initDefaultValueMap();\n\n  // Clean up flag settings for the previous backend.\n  // The first constroller under the `folderController` is the backend\n  // setting.\n  const fixedSelectionCount = 1;\n  while (folderController.__controllers.length > fixedSelectionCount) {\n    folderController.remove(\n      folderController.__controllers[folderController.__controllers.length - 1],\n    );\n  }\n\n  // Show flag settings for the new backend.\n  showBackendFlagSettings(folderController, backendName);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport \"@tensorflow/tfjs-backend-webgl\";\n// import * as mpHands from '@mediapipe/hands';\n\nimport * as tfjsWasm from \"@tensorflow/tfjs-backend-wasm\";\n\ntfjsWasm.setWasmPaths(`https://chat.positive-intentions.com/wasm`);\n\nimport * as handdetection from \"@tensorflow-models/hand-pose-detection\";\n\nimport { Camera } from \"./camera\";\nimport { setupDatGui } from \"./option_panel\";\nimport { STATE } from \"./shared/params\";\nimport { setupStats } from \"./shared/stats_panel\";\nimport { setBackendAndEnvFlags } from \"./shared/util\";\n\nlet detector, camera, stats;\nlet startInferenceTime,\n  numInferences = 0;\nlet inferenceTimeSum = 0,\n  lastPanelUpdate = 0;\nlet rafId;\n\nasync function createDetector() {\n  switch (STATE.model) {\n    case handdetection.SupportedModels.MediaPipeHands:\n      const runtime = STATE.backend.split(\"-\")[0];\n      if (runtime === \"mediapipe\") {\n        return handdetection.createDetector(STATE.model, {\n          runtime,\n          modelType: STATE.modelConfig.type,\n          maxHands: STATE.modelConfig.maxNumHands,\n          solutionPath: `https://chat.positive-intentions.com/wasm`,\n        });\n      } else if (runtime === \"tfjs\") {\n        return handdetection.createDetector(STATE.model, {\n          runtime,\n          modelType: STATE.modelConfig.type,\n          maxHands: STATE.modelConfig.maxNumHands,\n        });\n      }\n  }\n}\n\nasync function checkGuiUpdate() {\n  if (STATE.isTargetFPSChanged || STATE.isSizeOptionChanged) {\n    camera = await Camera.setupCamera(STATE.camera);\n    STATE.isTargetFPSChanged = false;\n    STATE.isSizeOptionChanged = false;\n  }\n\n  if (STATE.isModelChanged || STATE.isFlagChanged || STATE.isBackendChanged) {\n    STATE.isModelChanged = true;\n\n    window.cancelAnimationFrame(rafId);\n\n    if (detector != null) {\n      detector.dispose();\n    }\n\n    if (STATE.isFlagChanged || STATE.isBackendChanged) {\n      await setBackendAndEnvFlags(STATE.flags, STATE.backend);\n    }\n\n    try {\n      detector = await createDetector(STATE.model);\n    } catch (error) {\n      detector = null;\n      alert(error);\n    }\n\n    STATE.isFlagChanged = false;\n    STATE.isBackendChanged = false;\n    STATE.isModelChanged = false;\n  }\n}\n\nfunction beginEstimateHandsStats() {\n  startInferenceTime = (performance || Date).now();\n}\n\nfunction endEstimateHandsStats() {\n  const endInferenceTime = (performance || Date).now();\n  inferenceTimeSum += endInferenceTime - startInferenceTime;\n  ++numInferences;\n\n  const panelUpdateMilliseconds = 1000;\n  if (endInferenceTime - lastPanelUpdate >= panelUpdateMilliseconds) {\n    const averageInferenceTime = inferenceTimeSum / numInferences;\n    inferenceTimeSum = 0;\n    numInferences = 0;\n    // stats.customFpsPanel.update(\n    //     1000.0 / averageInferenceTime, 120 /* maxValue */);\n    lastPanelUpdate = endInferenceTime;\n  }\n}\n\nasync function renderResult() {\n  if (camera.video.readyState < 2) {\n    await new Promise((resolve) => {\n      camera.video.onloadeddata = () => {\n        resolve(video);\n      };\n    });\n  }\n\n  let hands = null;\n\n  // Detector can be null if initialization failed (for example when loading\n  // from a URL that does not exist).\n  if (detector != null) {\n    // FPS only counts the time it takes to finish estimateHands.\n    beginEstimateHandsStats();\n\n    // Detectors can throw errors, for example when using custom URLs that\n    // contain a model that doesn't provide the expected output.\n    try {\n      hands = await detector.estimateHands(camera.video, {\n        flipHorizontal: false,\n      });\n    } catch (error) {\n      detector.dispose();\n      detector = null;\n      alert(error);\n    }\n\n    endEstimateHandsStats();\n  }\n\n  camera.drawCtx();\n\n  // The null check makes sure the UI is not in the middle of changing to a\n  // different model. If during model change, the result is from an old model,\n  // which shouldn't be rendered.\n  if (hands && hands.length > 0 && !STATE.isModelChanged) {\n    camera.drawResults(hands);\n  }\n}\n\nasync function renderPrediction() {\n  await checkGuiUpdate();\n\n  if (!STATE.isModelChanged) {\n    await renderResult();\n  }\n\n  rafId = requestAnimationFrame(renderPrediction);\n}\n\nasync function app() {\n  // Gui content will change depending on which model is in the query string.\n  const urlParams = new URLSearchParams(window.location.search);\n  if (!urlParams.has(\"model\")) {\n    // set default model to \"mediapipe_hands\"\n    urlParams.set(\"model\", \"mediapipe_hands\");\n  }\n\n  await setupDatGui(urlParams);\n\n  // stats = setupStats();\n\n  camera = await Camera.setupCamera(STATE.camera);\n\n  await setBackendAndEnvFlags(STATE.flags, STATE.backend);\n\n  detector = await createDetector();\n\n  renderPrediction();\n}\n\napp();\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["handdetection","DEFAULT_LINE_WIDTH","DEFAULT_RADIUS","VIDEO_SIZE","width","height","STATE","camera","targetFPS","sizeOption","backend","flags","modelConfig","MEDIAPIPE_HANDS_CONFIG","type","render3D","TUNABLE_FLAG_VALUE_RANGE_MAP","WEBGL_VERSION","WASM_HAS_SIMD_SUPPORT","WASM_HAS_MULTITHREAD_SUPPORT","WEBGL_CPU_FORWARD","WEBGL_PACK","WEBGL_FORCE_F16_TEXTURES","WEBGL_RENDER_FLOAT32_CAPABLE","WEBGL_FLUSH_THRESHOLD","CHECK_COMPUTATION_FOR_ERRORS","BACKEND_FLAGS_MAP","_defineProperty","MODEL_BACKEND_MAP","SupportedModels","MediaPipeHands","TUNABLE_FLAG_NAME_MAP","PROD","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","tf","isiOS","test","navigator","userAgent","isAndroid","isMobile","resetBackend","_x","_resetBackend","_callee","backendName","ENGINE","backendFactory","_callee$","_context","engine","registryFactory","concat","registry","findBackendFactory","removeBackend","registerBackend","setBackend","setBackendAndEnvFlags","_x2","_x3","_setBackendAndEnvFlags","_callee2","flagConfig","flag","_backend$split","_backend$split2","runtime","$backend","_callee2$","_context2","t0","t1","indexOf","env","setFlags","split","_slicedToArray","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","Array","from","iter","isArray","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","toPrimitive","String","Number","scatter","params","ANCHOR_POINTS","fingerLookupIndices","thumb","indexFinger","middleFinger","ringFinger","pinky","connections","createScatterGLContext","selectors","scatterGLEl","document","querySelector","scatterGL","ScatterGL","rotateOnStart","selectEnabled","styles","polyline","defaultOpacity","deselectedOpacity","scatterGLHasInitialized","scatterGLCtxtLeftHand","scatterGLCtxtRightHand","Camera","video","getElementById","canvas","ctx","getContext","drawCtx","drawImage","videoWidth","videoHeight","clearCtx","clearRect","drawResults","hands","sort","hand1","hand2","handedness","ctxt","drawResult","hand","keypoints","drawKeypoints","keypoints3D","drawKeypoints3D","keypointsArray","fillStyle","strokeStyle","lineWidth","x","drawPoint","fingers","finger","points","map","idx","drawPath","closePath","region","Path2D","moveTo","point","lineTo","stroke","beginPath","arc","Math","PI","fill","scoreThreshold","pointsData","keypoint","z","dataset","Dataset","setPointColorer","score","render","updateDataset","sequences","pair","indices","setSequences","_setupCamera","cameraParam","$size","videoConfig","stream","_i2","_arr","mediaDevices","getUserMedia","audio","facingMode","frameRate","ideal","srcObject","onloadedmetadata","canvasContainer","style","play","translate","scale","resize","display","setupCamera","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","obj","dat","TUNABLE_FLAG_DEFAULT_VALUE_MAP","stringValueMap","setupDatGui","_setupDatGui","urlParams","gui","cameraFolder","fpsController","sizeController","modelFolder","model","maxNumHands","modelController","backendFolder","GUI","domElement","id","addFolder","add","onFinishChange","_","isTargetFPSChanged","onChange","isSizeOptionChanged","open","get","alert","isModelChanged","showModelConfigs","showBackendConfigs","_showBackendConfigs","_callee3","folderController","fixedSelectionCount","backends","backendController","_callee3$","_context3","__controllers","remove","_ref","isBackendChanged","showFlagSettings","_x5","addMediaPipeHandsControllers","modelConfigFolder","typeController","maxNumHandsController","step","render3DController","initDefaultValueMap","_initDefaultValueMap","_callee4","index","_flag","_callee4$","_context4","getAsync","getTunableRange","defaultValue","tunableRange","showBackendFlagSettings","tunableFlags","_loop","flagName","flagValueRange","console","warn","flagController","realValue","stringValue","isFlagChanged","_x4","_showFlagSettings","_callee5","_callee5$","_context5","tfjsWasm","setWasmPaths","setupStats","detector","stats","startInferenceTime","numInferences","inferenceTimeSum","lastPanelUpdate","rafId","createDetector","_createDetector","modelType","maxHands","solutionPath","checkGuiUpdate","_checkGuiUpdate","window","cancelAnimationFrame","dispose","beginEstimateHandsStats","performance","Date","now","endEstimateHandsStats","endInferenceTime","panelUpdateMilliseconds","averageInferenceTime","renderResult","_renderResult","readyState","onloadeddata","estimateHands","flipHorizontal","renderPrediction","_renderPrediction","requestAnimationFrame","app","_app","URLSearchParams","location","search","has","set"],"sourceRoot":""}